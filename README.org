#+TITLE: study
#+DESCRIPTION: Repositório de anotações de aulas e exercícios resolvidos
#+AUTHOR: Lucas Vieira
#+EMAIL: lucasvieira@lisp.com.br

* Objetivo

O objetivo deste repositório é reunir, de forma organizada, todas as anotações
de aulas e de exercícios resolvidos, ao longo do meu curso de Sistemas de
Informação.

Este repositório deverá servir, para mim, como referências futuras que eu possa
revisitar, assim como uma forma de praticar a minha organização das minhas notas
de estudo.

Os exercícios aqui presentes não envolvem atividades pontuadas pelos
professores, pura e simplesmente porque minha intenção não é facilitar o plágio,
mas sim indexar minhas notas para meu uso próprio. Independente da forma como os
arquivos deste repositório sejam distribuídos, desde já isento-me da
responsabilidade sobre as informações nele contidas; dito isto, não tenho a
pretensão ou a arrogância de afirmar a corretude dos textos e exercícios aqui
listados.

A maioria ou todos os exercícios aqui presentes poderão, também, não incluir
seus respectivos enunciados; também me comprometo a não redistribuir, aqui,
nenhum dos materiais dos meus professores.

Um objetivo secundário é o aspecto da utilização de formatos e recursos abertos,
ou de código-aberto, durante o curso de uma formação acadêmica na área da
tecnologia. Ao realizar o uso de tecnologias abertas (exceto quando não houver
outra saída senão utilizar uma tecnologia proprietária), pode-se reforçar
os conceitos de flexibilidade e distribuição irrestrita de informação; desta
forma, outros leitores não necessariamente precisarão, da mesma forma, de
ferramentas fechadas e possivelmente restritas a alguns poucos sistemas, para
lidar com problemas acadêmicos.

* Conteúdo

A maior parte das informações aqui existentes estará escrita em texto plano, sob
o formato Org, para melhor integração com o editor de texto Emacs. Trabalhos
exigindo uma maior responsabilidade sobre a formatação estarão escritos em
LaTeX; exercícios de linguagens de programação poderão estar escritos em pseudo-
-código, ou na linguagem de programação estudada ou utilizada.

Todos os commits presentes neste repositório estarão digitalmente assinados por
mim. Desta forma, acredito que posso atestar o fato de que as respostas para
exercícios aqui descritas vieram de mim mesmo.

** Relação de diretórios e atividades incluídas
Última atualização: <2019-03-25 seg>

*** ~SI~
Exercícios feitos no curso de Sistemas de Informação. Nenhuma destas
respostas tem a garantia de estar correta, e as respostas foram
completamente feitas por mim.

- ~2018-2~: Exercícios relacionados à faculdade, no segundo semestre de 2018.
  - ~AEDS I~: Algoritmos e Estruturas de Dados I. Não necessariamente terminados.
  - ~Cálculo I~: Alguns poucos documentos escritos em Org, servindo como
    resoluções de exercícios enviados via Moodle, na disciplina de
    Cálculo I.
- ~2019-1~: Exercícios relacionados à faculdade, no primeiro semestre
  de 2019.
  - ~TC~: Exercícios de Teoria da Computação.

*** ~exercises~
Exercícios variados, não necessariamente relacionados a estudo.

- ~quine~: Tentativa de implementação de um quine (programa auto-replicável) em
  Common Lisp.

*** ~nand2tetris~
Exercícios resolvidos do livro /The Elements of Computing Systems/, de
Nisan e Schocken. Normalmente, não inclui os arquivos de testes do
livro, que podem ser encontrados na distribuição do material
eletrônico.

- ~ch01~: Implementação de chips básicos.
- ~ch02~: Implementação de meio-somador, somador; incrementador e somador de
  16-bits; e finalmente, da unidade lógico-aritmética (ALU) da plataforma
  Hack.
- ~ch03~: Implementação de registrador, chips variados de memória, e do program
  counter (PC).
- ~ch04~: Auto-estudo. Réplica com ligeira modificação do programa em Assembly
  de exemplo do livro. Utilizado para melhor auto-conhecimento da linguagem de
  Assembly da plataforma Hack.
- ~ch05~: Implementação dos chips de memória (Memory) e do processador (CPU) da
  plataforma Hack, culminando em um chip representativo de uma máquina
  completa (Computer).
- ~ch06~: Implementação de um assembler capaz de gerar código de máquina para a
  arquitetura Hack. O trabalho foi feito em um repositório externo, que foi
  linkado como submódulo Git neste diretório.
- ~ch07~: Códigos Assembly gerados pela implementação inicial do tradutor da VM
  para a plataforma Hack. O projeto não foi incluído como submódulo neste
  diretório, pois não estava completo ainda Todavia, este estágio do projeto
  pode ser acompanhado na [[https://github.com/luksamuk/cl-hackvmtr/tree/v0.5][tag v0.5]] do repositório do mesmo. A versão estável
  do software fica delegada para o capítulo 08.
- ~ch08~: Códigos assembly gerados pela implementação final do tradutor da VM
  para a plataforma Hack. O projeto final também suporta uma /flag/ que inibe o
  código de /bootstrap/ de ser injetado no cabeçalho do arquivo .asm
  final. Assim como no Capítulo 06, o VM Translator foi programado em um
  repositório externo, e linkado como submódulo Git no diretório deste
  capítulo.
- ~custom-chips~: Chips extras construídos por curiosidade. A maioria envolve
  estudos avulsos a respeito de circuitos integrados.

*** ~research~
Outros programas implementados com o intuito de pesquisa pessoal ou acadêmica.

- ~ga~: Implementação de um algoritmo genético simples baseado em um tutorial em
  Python. O algoritmo foi implementado em Common Lisp, utilizando um arquivo
  Org (=ga.org=) para programação literada. Exige o editor de textos Emacs para
  realizar entrelaçamento ou para execução dinâmica com o SLIME. Também inclui
  uma arquivo de código pós-entrelaçamento (=ga.lisp=) para acessibilidade.

* Licenciamento

Todo e qualquer código aqui escrito estará distribuído sob a Licença MIT, o que
fomenta o compartilhamento da informação e do software livre. Os dados neste
repositório podem ser redistribuídos, no entanto esta licença deverá ser seguida
à risca. Se você quiser um melhor detalhamento desta licença, veja a página
da mesma em [[http://escolhaumalicenca.com.br/licencas/mit/][escolhaumalicenca.com.br]] ou veja o arquivo [[./LICENSE.txt][LICENSE.txt]].

