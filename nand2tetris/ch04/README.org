#+TITLE: Chapter 04 Exercises

There are no exercises in this book. However, I did invent an exercise on my
own.

** Notes of the chapter

The .asm and .hack files in this directory refer to a slight modification in the
code on page 65 but, instead of adding up all numbers from 1 below 100, I add up
all numbers from 0 below 100, counting them 2 by 2.

Since this involves the removal of an incrementation line, I had to add some
small code which would add 2 to the D register.

Oh, and of course, I made the extra effort of compiling this whole thing by
hand, based on what the book describes from the opcodes and instructions. Most
of it was right, except the memory locations given by the variables (I suppose
this has to do with assembler and emulator implementation), and the jumps, which
I thought were actually diffs from the current instruction (I thought at some
point that, to jump to the label ~LOOP~, I had to go 13 instructions backwards, so
my jump involved setting the ~A~ register to -13 previously -- though now I
recall, it made no sense, since I only had 15 bits for the labels, so they had
to be unsigned).

*** Conclusion on the exercise

This small exercise also made me realize that labels are referred as by their
proper instruction "line" number. For example, an instruction ~@END~ is
translated to ~@N~, where ~N~ is the exact line number of the instruction in
~(END)~. Plus, labels are not counted as lines, as if they were just a "comment"
in the beginning of the next line.

Oh, and of course, any jump (except ~JMP)~ is only made by an address indicated by
the ALU. This means that, for example, if you need to compare a number at any
register, you first need to pass the value of this register through the ALU, and
then you make the jump. This is pretty much what occurs in an instruction such
as ~D;JGT~: The ALU outputs the intact contents of register ~D~, and then ~JGT~ jumps
to the label indicated by it. ~JMP~, however, looks at register ~A~ to make a jump,
so the ALU is ignored.

The .asm file can be used on the Assembler, and the .hack file, though it can be
generated from the .asm one, should be used on the CPU Emulator.
